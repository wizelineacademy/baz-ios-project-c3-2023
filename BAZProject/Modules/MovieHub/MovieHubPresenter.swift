//
//  MovieHubPresenter.swift
//  BAZProject
//
//  Created Cristian Eduardo Villegas Alvarez on 11/04/23.
//  Copyright Â© 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Cristian Villegas
//

import UIKit

class MovieHubPresenter: MovieHubPresenterProtocol {
    
    func filterConfigurationByTitle(_ title: String) {
        let filteredConfiguration = configuration.map { (section) -> CVMovieHubViewEntitySection in
            let filteredMovies = section.availableMovies.filter { (movie) -> Bool in
                return movie.title.lowercased().contains(title.lowercased())
            }
            return CVMovieHubViewEntitySection(sectionName: section.sectionName, availableMovies: filteredMovies)
        }
        self.filteredConfiguration = filteredConfiguration
    }
    
    
    func unfilterConfiguration() {
        self.filteredConfiguration = self.configuration
    }
    
    
    
    var configuration:[CVMovieHubViewEntitySection] = []
    var filteredConfiguration:[CVMovieHubViewEntitySection] = []
    
    func onSectionsFetch(sections: [CVMovieHubViewEntitySection]) {
        self.configuration = sections
        self.filteredConfiguration = sections
        self.view?.onSectionsFetch(sections: sections)
    }

    
    weak private var view: MovieHubViewProtocol?
    var interactor: MovieHubInteractorProtocol?
    private let router: MovieHubWireframeProtocol

    func tryFetchSections() {
        interactor?.tryFetchSections()
    }
    init(interface: MovieHubViewProtocol, interactor: MovieHubInteractorProtocol?, router: MovieHubWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}
